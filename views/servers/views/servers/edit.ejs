<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Server - <%= typeof settings !== 'undefined' && settings.name ? settings.name : 'Dashboard' %></title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        :root {
            --primary: #7289da;
            --primary-dark: #5b6eae;
            --secondary: #1e1e2e;
            --secondary-light: #2a2a3e;
            --accent: #43b581;
            --danger: #ed4245;
            --warning: #faa81a;
            --text: #ffffff;
            --text-muted: #a0a0c0;
            --border: rgba(255, 255, 255, 0.1);
            --card-bg: rgba(30, 30, 46, 0.8);
            --sidebar-width: 260px;
            --header-height: 70px;
            --neon-glow: 0 0 10px rgba(114, 137, 218, 0.7);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
            color: var(--text);
            min-height: 100vh;
            display: flex;
        }

        /* Sidebar Styles */
        .sidebar {
            width: var(--sidebar-width);
            background: var(--secondary);
            height: 100vh;
            position: fixed;
            overflow-y: auto;
            padding: 20px 0;
            border-right: 1px solid var(--border);
        }

        .sidebar-header {
            padding: 0 20px 20px;
            border-bottom: 1px solid var(--border);
            margin-bottom: 15px;
        }

        .nav-item {
            display: flex;
            align-items: center;
            padding: 12px 20px;
            color: var(--text-muted);
            text-decoration: none;
            transition: all 0.3s;
            position: relative;
        }

        .nav-item:hover {
            background: var(--secondary-light);
            color: var(--text);
        }

        .nav-item:hover::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            height: 100%;
            width: 3px;
            background: var(--primary);
            box-shadow: var(--neon-glow);
        }

        .nav-item.active {
            background: var(--secondary-light);
            color: var(--text);
        }

        .nav-item.active::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            height: 100%;
            width: 3px;
            background: var(--primary);
            box-shadow: var(--neon-glow);
        }

        .nav-item i {
            width: 24px;
            margin-right: 12px;
        }

        /* Main Content Styles */
        .main-content {
            flex: 1;
            margin-left: var(--sidebar-width);
            padding: 20px;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 20px;
            background: var(--secondary-light);
            border-radius: 10px;
            margin-bottom: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .user-info {
            display: flex;
            align-items: center;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 12px;
            border: 2px solid var(--primary);
        }

        .user-details h3 {
            font-size: 1rem;
        }

        .user-details p {
            font-size: 0.8rem;
            color: var(--text-muted);
        }

        .logout-btn {
            background: var(--danger);
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 6px;
            cursor: pointer;
            transition: background 0.3s ease;
            display: flex;
            align-items: center;
        }

        .logout-btn:hover {
            background: #c03537;
        }

        .logout-btn i {
            margin-right: 6px;
        }

        /* Card Styles */
        .card {
            background: var(--card-bg);
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            border: 1px solid var(--border);
        }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid var(--border);
        }

        .card-title {
            font-size: 1.2rem;
            display: flex;
            align-items: center;
        }

        .card-title i {
            margin-right: 10px;
            color: var(--primary);
        }

        .card-icon {
            color: var(--primary);
            font-size: 1.5rem;
        }

        /* Form Styles */
        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--text);
        }

        .form-input {
            width: 100%;
            padding: 12px 15px;
            background: var(--secondary-light);
            border: 1px solid var(--border);
            border-radius: 8px;
            color: var(--text);
            font-size: 1rem;
            transition: all 0.3s;
        }

        .form-input:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(114, 137, 218, 0.2);
        }

        .input-with-unit {
            position: relative;
        }

        .input-unit {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-muted);
        }

        .slider-container {
            margin-top: 10px;
        }

        .slider {
            -webkit-appearance: none;
            width: 100%;
            height: 6px;
            border-radius: 3px;
            background: var(--secondary-light);
            outline: none;
        }

        .slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 18px;
            height: 18px;
            border-radius: 50%;
            background: var(--primary);
            cursor: pointer;
            transition: all 0.3s;
        }

        .slider::-webkit-slider-thumb:hover {
            box-shadow: var(--neon-glow);
        }

        .slider-labels {
            display: flex;
            justify-content: space-between;
            margin-top: 5px;
            color: var(--text-muted);
            font-size: 0.8rem;
        }

        /* Button Styles */
        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 10px 20px;
            border-radius: 8px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
            border: none;
            font-size: 1rem;
        }

        .btn-primary {
            background: var(--primary);
            color: white;
        }

        .btn-primary:hover {
            background: var(--primary-dark);
            box-shadow: var(--neon-glow);
        }

        .btn-danger {
            background: var(--danger);
            color: white;
        }

        .btn-danger:hover {
            background: #c03537;
        }

        .btn i {
            margin-right: 8px;
        }

        /* Resource Preview */
        .resource-preview {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 15px;
            margin-top: 20px;
        }

        .preview-item {
            background: var(--secondary-light);
            padding: 15px;
            border-radius: 8px;
            text-align: center;
        }

        .preview-value {
            font-size: 1.5rem;
            font-weight: bold;
            color: var(--primary);
            margin-bottom: 5px;
        }

        .preview-label {
            font-size: 0.9rem;
            color: var(--text-muted);
        }

        /* Toggle Switch */
        .toggle-switch {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 24px;
        }

        .toggle-switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .toggle-slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: var(--secondary-light);
            transition: .4s;
            border-radius: 24px;
        }

        .toggle-slider:before {
            position: absolute;
            content: "";
            height: 16px;
            width: 16px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }

        input:checked + .toggle-slider {
            background-color: var(--accent);
        }

        input:checked + .toggle-slider:before {
            transform: translateX(26px);
        }

        /* Server Status */
        .server-status {
            display: flex;
            align-items: center;
            margin-top: 15px;
            padding: 10px;
            background: var(--secondary-light);
            border-radius: 8px;
        }

        .status-indicator {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            margin-right: 10px;
        }

        .status-online {
            background: var(--accent);
            box-shadow: 0 0 8px var(--accent);
        }

        .status-offline {
            background: var(--danger);
        }

        /* Responsive */
        @media (max-width: 768px) {
            .sidebar {
                width: 70px;
            }

            .sidebar-header h2, .nav-item span {
                display: none;
            }

            .nav-item {
                justify-content: center;
                padding: 15px;
            }

            .nav-item i {
                margin-right: 0;
            }

            .main-content {
                margin-left: 70px;
            }

            .resource-preview {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="sidebar-header">
            <h2><%= typeof settings !== 'undefined' && settings.name ? settings.name : 'Dashboard' %></h2>
        </div>

        <a href="/dashboard" class="nav-item">
            <i class="fas fa-home"></i>
            <span>Dashboard</span>
        </a>

        <a href="/servers" class="nav-item">
            <i class="fas fa-server"></i>
            <span>My Servers</span>
        </a>

        <a href="/servers/new" class="nav-item">
            <i class="fas fa-plus"></i>
            <span>Create Server</span>
        </a>

        <a href="/afk" class="nav-item">
            <i class="fas fa-coins"></i>
            <span>AFK Earnings</span>
        </a>

        <a href="/profile" class="nav-item">
            <i class="fa-solid fa-id-card"></i>
            <span>My Profile</span>
        </a>

        <a href="/earn" class="nav-item">
            <i class="fas fa-money-bill-wave"></i>
            <span>Earn Coins</span>
        </a>

        <a href="/promotion" class="nav-item">
            <i class="fas fa-bullhorn"></i>
            <span>Promotion</span>
        </a>

        <a href="/stock" class="nav-item">
            <i class="fas fa-chart-line"></i>
            <span>Stock Market</span>
        </a>

        <a href="/store" class="nav-item">
            <i class="fas fa-microchip"></i>
            <span>Resources</span>
        </a>

        <a href="/security" class="nav-item">
            <i class="fas fa-cog"></i>
            <span>Settings</span>
        </a>

        <a href="/transfer" class="nav-item">
            <i class="fa-solid fa-money-bill-transfer"></i>
            <span>Transfer Coin</span>
        </a>

        <% if (typeof user !== 'undefined' && user.role === 'admin') { %>
            <a href="/admin" class="nav-item">
                <i class="fas fa-shield-alt"></i>
                <span>Admin Panel</span>
            </a>
        <% } %>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <!-- Header -->
        <div class="header">
            <div class="user-info">
                <% if (typeof user !== 'undefined' && user.avatar) { %>
                    <img src="<%= user.avatar %>" alt="Avatar" class="user-avatar">
                <% } else { %>
                    <div class="user-avatar" style="background: var(--primary); display: flex; align-items: center; justify-content: center;">
                        <i class="fas fa-user"></i>
                    </div>
                <% } %>
                <div class="user-details">
                    <h3><%= typeof user !== 'undefined' ? user.username : 'Guest' %></h3>
                    <p>Balance: <span id="user-balance"><%= typeof coins !== 'undefined' ? coins.toFixed(2) : '0.00' %></span> coins</p>
                </div>
            </div>

            <button class="logout-btn" onclick="location.href='/logout'">
                <i class="fas fa-sign-out-alt"></i>
                Logout
            </button>
        </div>

        <!-- Server Edit Form -->
        <% if (req.query.id) { %>
        <% if (pterodactyl.relationships.servers.data.filter(name => name.attributes.id == req.query.id).length == 1) {
            let serverinfo = pterodactyl.relationships.servers.data.filter(name => name.attributes.id == req.query.id)[0];
            let attemptegg = null;
            let attemptname = null;
            for (let [name, value] of Object.entries(settings.api.client.eggs)) {
                if (settings.api.client.eggs[name].info.egg == serverinfo.attributes.egg) {
                    attemptegg = settings.api.client.eggs[name];
                    attemptname = name;
                };
            };
            let egginfo = attemptegg ? attemptegg.display : "???";
        %>

        <div class="card">
            <div class="card-header">
                <h2 class="card-title"><i class="fas fa-server"></i> Edit Server: <%= serverinfo.attributes.name %></h2>
                <span class="server-status">
                    <span class="status-indicator status-online"></span>
                    Online
                </span>
            </div>

            <div class="form-group">
                <label class="form-label">Server Name</label>
                <input type="text" class="form-input" value="<%= serverinfo.attributes.name %>" id="server-name">
            </div>

            <div class="form-group">
                <label class="form-label">Server Description</label>
                <input type="text" class="form-input" value="My awesome server" id="server-description">
            </div>

            <div class="form-group">
                <label class="form-label">Server Type</label>
                <input type="text" class="form-input" value="<%= egginfo %>" disabled>
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h2 class="card-title"><i class="fas fa-microchip"></i> Resource Allocation</h2>
            </div>

            <div class="form-group">
                <label class="form-label">Memory (GB)</label>
                <div class="input-with-unit">
                    <input type="number" class="form-input" id="ram" value="<%= serverinfo.attributes.limits.memory/1024 %>" min="1" max="16" step="1">
                    <span class="input-unit">GB</span>
                </div>
                <div class="slider-container">
                    <input type="range" min="1" max="16" value="<%= serverinfo.attributes.limits.memory/1024 %>" class="slider" id="ram-slider">
                    <div class="slider-labels">
                        <span>1 GB</span>
                        <span>16 GB</span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="form-label">CPU Cores</label>
                <div class="input-with-unit">
                    <input type="number" class="form-input" id="cpu" value="<%= serverinfo.attributes.limits.cpu/100 %>" min="1" max="8" step="1">
                    <span class="input-unit">Cores</span>
                </div>
                <div class="slider-container">
                    <input type="range" min="1" max="8" value="<%= serverinfo.attributes.limits.cpu/100 %>" class="slider" id="cpu-slider">
                    <div class="slider-labels">
                        <span>1 Core</span>
                        <span>8 Cores</span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="form-label">Storage (GB)</label>
                <div class="input-with-unit">
                    <input type="number" class="form-input" id="disk" value="<%= serverinfo.attributes.limits.disk/1024 %>" min="10" max="100" step="5">
                    <span class="input-unit">GB</span>
                </div>
                <div class="slider-container">
                    <input type="range" min="10" max="100" value="<%= serverinfo.attributes.limits.disk/1024 %>" class="slider" id="disk-slider">
                    <div class="slider-labels">
                        <span>10 GB</span>
                        <span>100 GB</span>
                    </div>
                </div>
            </div>

            <div class="resource-preview">
                <div class="preview-item">
                    <div class="preview-value" id="preview-ram"><%= serverinfo.attributes.limits.memory/1024 %> GB</div>
                    <div class="preview-label">Memory</div>
                </div>
                <div class="preview-item">
                    <div class="preview-value" id="preview-cpu"><%= serverinfo.attributes.limits.cpu/100 %> Cores</div>
                    <div class="preview-label">CPU</div>
                </div>
                <div class="preview-item">
                    <div class="preview-value" id="preview-disk"><%= serverinfo.attributes.limits.disk/1024 %> GB</div>
                    <div class="preview-label">Storage</div>
                </div>
                <div class="preview-item">
                    <div class="preview-value" id="preview-cost">0.00</div>
                    <div class="preview-label">Cost / Hour</div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h2 class="card-title"><i class="fas fa-plug"></i> Advanced Settings</h2>
            </div>

            <div class="form-group">
                <label class="form-label">Docker Image</label>
                <input type="text" class="form-input" value="quay.io/parkervcp/yolks:nodejs_18" disabled>
            </div>

            <div class="form-group">
                <label class="form-label">Startup Command</label>
                <input type="text" class="form-input" value="bash /home/container/start.sh" disabled>
            </div>

            <div style="display: flex; align-items: center; justify-content: space-between; margin-top: 20px;">
                <label style="display: flex; align-items: center;">
                    <span style="margin-right: 10px;">Auto Restart on Crash</span>
                    <label class="toggle-switch">
                        <input type="checkbox" checked>
                        <span class="toggle-slider"></span>
                    </label>
                </label>

                <label style="display: flex; align-items: center;">
                    <span style="margin-right: 10px;">OOM Protection</span>
                    <label class="toggle-switch">
                        <input type="checkbox" checked>
                        <span class="toggle-slider"></span>
                    </label>
                </label>
            </div>
        </div>

        <div style="display: flex; justify-content: space-between; margin-top: 20px;">
            <button class="btn btn-danger" onclick="location.href='../delete?id=<%= req.query.id %>'">
                <i class="fas fa-trash"></i> Delete Server
            </button>

            <button class="btn btn-primary" onclick="submitForm()">
                <i class="fas fa-save"></i> Apply Changes
            </button>
        </div>

        <script>
            // Link sliders with input fields
            const ramSlider = document.getElementById('ram-slider');
            const ramInput = document.getElementById('ram');
            const cpuSlider = document.getElementById('cpu-slider');
            const cpuInput = document.getElementById('cpu');
            const diskSlider = document.getElementById('disk-slider');
            const diskInput = document.getElementById('disk');

            ramSlider.addEventListener('input', () => {
                ramInput.value = ramSlider.value;
                updatePreview();
            });

            ramInput.addEventListener('input', () => {
                ramSlider.value = ramInput.value;
                updatePreview();
            });

            cpuSlider.addEventListener('input', () => {
                cpuInput.value = cpuSlider.value;
                updatePreview();
            });

            cpuInput.addEventListener('input', () => {
                cpuSlider.value = cpuInput.value;
                updatePreview();
            });

            diskSlider.addEventListener('input', () => {
                diskInput.value = diskSlider.value;
                updatePreview();
            });

            diskInput.addEventListener('input', () => {
                diskSlider.value = diskInput.value;
                updatePreview();
            });

            function updatePreview() {
                document.getElementById('preview-ram').textContent = ramInput.value + ' GB';
                document.getElementById('preview-cpu').textContent = cpuInput.value + ' Cores';
                document.getElementById('preview-disk').textContent = diskInput.value + ' GB';

                // Calculate cost (example calculation)
                const cost = (parseInt(ramInput.value) * 0.5 + parseInt(cpuInput.value) * 0.8 + parseInt(diskInput.value) * 0.1).toFixed(2);
                document.getElementById('preview-cost').textContent = cost + ' coins';
            }

            function submitForm() {
                let ram = encodeURIComponent(document.getElementById("ram").value);
                let disk = encodeURIComponent(document.getElementById("disk").value);
                let cpu = encodeURIComponent(document.getElementById("cpu").value);
                document.location.href = `/modify?id=<%= req.query.id %>&ram=${ram*1024}&disk=${disk*1024}&cpu=${cpu*100}`;
            }

            // Initialize preview
            updatePreview();
        </script>

        <% } else { %>
        <div class="card">
            <div class="card-header">
                <h2 class="card-title"><i class="fas fa-exclamation-triangle"></i> Error</h2>
            </div>
            <p class="text-gray-600">Could not find server with the provided ID.</p>
        </div>
        <% } %>
        <% } else { %>
        <div class="card">
            <div class="card-header">
                <h2 class="card-title"><i class="fas fa-exclamation-triangle"></i> Error</h2>
            </div>
            <p class="text-gray-600">Missing server ID.</p>
        </div>
        <% } %>
    </div>

    <script>
        // Highlight active page in navigation
        document.addEventListener('DOMContentLoaded', function() {
            const currentPath = window.location.pathname;
            const navLinks = document.querySelectorAll('.nav-item');

            navLinks.forEach(link => {
                if (link.getAttribute('href') === currentPath) {
                    link.classList.add('active');
                } else {
                    link.classList.remove('active');
                }
            });
        });
    </script>
</body>
</html>